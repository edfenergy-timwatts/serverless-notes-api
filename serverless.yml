service: notes-app-api 

# Create a single package per Lambda function (default behaviour is one package for all)
package:
  individually: true

plugins:
  - serverless-bundle          # Use Webpack 4 to optimise packages for Lambda (by dropping redundant dependencies)
  - serverless-offline         # Helpful for local development
  - serverless-dotenv-plugin   # Load .env files as Lambda environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: eu-west-2

# Define process.env variables for reference by multiple Lambda functions
  environment:
    tableName: notes

# Define permissions set for Lambda functions to access DynamoDB
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:eu-west-2:*:table/notes

functions:
  create:
    handler: create.main
    events:
      - http:
          path: /notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: /notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: update.main
    events:
      - http:
          path: /notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: delete.main
    events:
      - http:
          path: /notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  list:
    handler: list.main
    events:
      - http:
          path: /notes
          method: get
          cors: true
          authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  - ${file(resources/api-gateway-errors.yml)}

# Resources:
#   NotesTable:
#     Type: AWS::DynamoDB::Table
#     Properties:
#       TableName: notes
#       AttributeDefinitions:
#         - AttributeName: "userId"
#           AttributeType: "S"
#         - AttributeName: "noteId"
#           AttributeType: "S"
#       KeySchema:
#         - AttributeName: "userId"
#           KeyType: "HASH"
#         - AttributeName: "noteId"
#           KeyType: "RANGE"
#       BillingMode: PAY_PER_REQUEST
